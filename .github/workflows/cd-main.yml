name: CD for Main

on:
  workflow_run:
    workflows: ["CI for Main"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        check-latest: true

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 30
        build-tools: '30.0.3'

    - name: Create local.properties
      env:
        SDK_DIR: ${{ secrets.SDK_DIR }}
        FEEDBACK_EMAIL: ${{ secrets.FEEDBACK_EMAIL }}
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        KEY_ALIAS: ${{ secrets```yaml
name: CD for Main

on:
  workflow_run:
    workflows: ["CI for Main"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        check-latest: true

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 30
        build-tools: '30.0.3'

    - name: Create local.properties
      env:
        SDK_DIR: ${{ secrets.SDK_DIR }}
        FEEDBACK_EMAIL: ${{ secrets.FEEDBACK_EMAIL }}
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      run: |
        echo "sdk.dir=${SDK_DIR}" > local.properties
        echo "feedback_email=${FEEDBACK_EMAIL}" >> local.properties
        echo "store_file=${{ github.workspace }}/app/keystore.jks" >> local.properties
        echo "store_password=${STORE_PASSWORD}" >> local.properties
        echo "key_password=${KEY_PASSWORD}" >> local.properties
        echo "key_alias=${KEY_ALIAS}" >> local.properties

    - name: Create google-services.json
      env:
        DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
      run: echo $DATA | base64 -d > app/google-services.json

    - name: Create keystore.jks
      env:
        DATA: ${{ secrets.KEY_STORE }}
      run: echo $DATA | base64 -d > app/keystore.jks

    - name: Verify keystore file
      run: ls -la app/keystore.jks

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: gradle-${{ runner.os }}

    - name: Clean Build
      run: ./gradlew clean

    - name: Build release AAB
      run: ./gradlew bundleRelease

    - name: Extract Version Name from Commit Message
      id: extract_version
      run: echo "RELEASE_NAME=$(git log -1 --pretty=format:'%s' | grep -oP 'release v\\K[0-9]+\\.[0-9]+\\.[0-9]+')" >> $GITHUB_ENV

    - name: Create Github Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.RELEASE_NAME }}
        release_name: "Release ${{ env.RELEASE_NAME }}"
        files: app/build/outputs/bundle/release/app-release.aab
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
